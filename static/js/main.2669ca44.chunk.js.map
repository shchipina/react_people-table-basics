{"version":3,"sources":["Navigation.tsx","App.tsx","components/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["Navigation","getActiveLink","isActive","cn","className","role","to","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","name","slug","sex","href","PeopleTable","people","urlSlug","useParams","map","person","born","died","motherName","fatherName","findMother","find","p","findFather","mother","father","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","catch","finally","length","PageNotFound","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2669ca44.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation = () => {\n  const getActiveLink = ({ isActive }: { isActive: boolean }) => (\n    cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getActiveLink}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getActiveLink}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <Outlet />\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import cn from 'classnames';\n\ntype Props = {\n  name: string | null,\n  slug: string,\n  sex: string,\n};\n\nexport const PersonLink: React.FC<Props> = ({ name, slug, sex }) => {\n  return (\n    <a\n      href={`#/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleTable = ({ people }: { people: Person[] }) => {\n  const { slug: urlSlug } = useParams();\n\n  // const getClassByGender = (gender: string) => (\n  //   cn({\n  //     'has-tezt-danger': gender === 'f',\n  //   })\n  // );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n          } = person;\n\n          const findMother = people.find(p => p.name === motherName);\n          const findFather = people.find(p => p.name === fatherName);\n\n          const mother = findMother ? (\n            <PersonLink\n              name={motherName}\n              sex={findMother.sex}\n              slug={findMother.slug}\n            />\n          ) : motherName;\n\n          const father = findFather ? (\n            <PersonLink\n              name={fatherName}\n              sex={findFather.sex}\n              slug={findFather.slug}\n            />\n          ) : fatherName;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={cn({\n                'has-background-warning': slug === urlSlug,\n              })}\n            >\n              <td>\n                <Link\n                  to={`${slug}`}\n                  className={cn({\n                    'has-text-danger': sex === 'f',\n                  })}\n                >\n                  {name}\n                </Link>\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{mother || '-'}</td>\n              <td>{father || '-'}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => {\n        setPeople(response);\n      })\n      .catch(() => setErrorMessage(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <PeopleTable\n              people={people}\n            />\n          )}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}